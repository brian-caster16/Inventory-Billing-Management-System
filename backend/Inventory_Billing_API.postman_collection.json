{
  "info": {
    "name": "Inventory & Billing Management API",
    "description": "Complete API collection for testing the Inventory & Billing Management Backend system",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "productId",
      "value": "",
      "type": "string"
    },
    {
      "key": "customerId",
      "value": "",
      "type": "string"
    },
    {
      "key": "vendorId",
      "value": "",
      "type": "string"
    },
    {
      "key": "transactionId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.data.token);",
                  "    pm.collectionVariables.set('userId', response.data.user.id);",
                  "    pm.test('User registered successfully', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data.token).to.exist;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"Password123\",\n  \"businessId\": \"test_business_001\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.data.token);",
                  "    pm.collectionVariables.set('userId', response.data.user.id);",
                  "    pm.test('Login successful', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data.token).to.exist;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test User\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"Password123\",\n  \"newPassword\": \"NewPassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "change-password"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Create Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('productId', response.data.product._id);",
                  "    pm.test('Product created successfully', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data.product._id).to.exist;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Laptop\",\n  \"description\": \"High-performance testing laptop\",\n  \"price\": 999.99,\n  \"stock\": 50,\n  \"category\": \"Electronics\",\n  \"sku\": \"LAP001\",\n  \"minStockLevel\": 5\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": ["{{baseUrl}}"],
              "path": ["products"]
            }
          }
        },
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}"]
            }
          }
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test Laptop\",\n  \"price\": 1099.99,\n  \"stock\": 45\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}"]
            }
          }
        },
        {
          "name": "Update Product Stock",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 10,\n  \"operation\": \"add\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}/stock",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}", "stock"]
            }
          }
        },
        {
          "name": "Get Low Stock Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/low-stock",
              "host": ["{{baseUrl}}"],
              "path": ["products", "low-stock"]
            }
          }
        },
        {
          "name": "Get Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/categories",
              "host": ["{{baseUrl}}"],
              "path": ["products", "categories"]
            }
          }
        },
        {
          "name": "Search Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products?search=laptop&category=electronics",
              "host": ["{{baseUrl}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "search",
                  "value": "laptop"
                },
                {
                  "key": "category",
                  "value": "electronics"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Contacts",
      "item": [
        {
          "name": "Create Customer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('customerId', response.data.contact._id);",
                  "    pm.test('Customer created successfully', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data.contact._id).to.exist;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Customer\",\n  \"phone\": \"+1234567890\",\n  \"email\": \"john@customer.com\",\n  \"type\": \"customer\",\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"USA\"\n  },\n  \"creditLimit\": 5000,\n  \"notes\": \"Premium customer\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/contacts",
              "host": ["{{baseUrl}}"],
              "path": ["contacts"]
            }
          }
        },
        {
          "name": "Create Vendor",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('vendorId', response.data.contact._id);",
                  "    pm.test('Vendor created successfully', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data.contact._id).to.exist;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Tech Vendor Inc\",\n  \"phone\": \"+1987654321\",\n  \"email\": \"vendor@techvendor.com\",\n  \"type\": \"vendor\",\n  \"address\": {\n    \"street\": \"456 Business Ave\",\n    \"city\": \"San Francisco\",\n    \"state\": \"CA\",\n    \"zipCode\": \"94105\",\n    \"country\": \"USA\"\n  },\n  \"notes\": \"Reliable tech supplier\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/contacts",
              "host": ["{{baseUrl}}"],
              "path": ["contacts"]
            }
          }
        },
        {
          "name": "Get All Contacts",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/contacts?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["contacts"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Customers Only",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/contacts/customers",
              "host": ["{{baseUrl}}"],
              "path": ["contacts", "customers"]
            }
          }
        },
        {
          "name": "Get Vendors Only",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/contacts/vendors",
              "host": ["{{baseUrl}}"],
              "path": ["contacts", "vendors"]
            }
          }
        },
        {
          "name": "Search Contacts",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/contacts/search/john?type=customer&limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["contacts", "search", "john"],
              "query": [
                {
                  "key": "type",
                  "value": "customer"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            }
          }
        },
        {
          "name": "Update Contact",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Updated Customer\",\n  \"creditLimit\": 7500\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/contacts/{{customerId}}",
              "host": ["{{baseUrl}}"],
              "path": ["contacts", "{{customerId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Transactions",
      "item": [
        {
          "name": "Create Sale Transaction",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('transactionId', response.data.transaction._id);",
                  "    pm.test('Sale transaction created successfully', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data.transaction._id).to.exist;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"sale\",\n  \"customerId\": \"{{customerId}}\",\n  \"products\": [\n    {\n      \"productId\": \"{{productId}}\",\n      \"quantity\": 2,\n      \"price\": 999.99\n    }\n  ],\n  \"paymentMethod\": \"cash\",\n  \"notes\": \"Customer pickup\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/transactions",
              "host": ["{{baseUrl}}"],
              "path": ["transactions"]
            }
          }
        },
        {
          "name": "Create Purchase Transaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"purchase\",\n  \"vendorId\": \"{{vendorId}}\",\n  \"products\": [\n    {\n      \"productId\": \"{{productId}}\",\n      \"quantity\": 50,\n      \"price\": 800.00\n    }\n  ],\n  \"paymentMethod\": \"bank_transfer\",\n  \"notes\": \"Bulk purchase\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/transactions",
              "host": ["{{baseUrl}}"],
              "path": ["transactions"]
            }
          }
        },
        {
          "name": "Get All Transactions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/transactions?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["transactions"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Sales Only",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/transactions/sales",
              "host": ["{{baseUrl}}"],
              "path": ["transactions", "sales"]
            }
          }
        },
        {
          "name": "Get Purchases Only",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/transactions/purchases",
              "host": ["{{baseUrl}}"],
              "path": ["transactions", "purchases"]
            }
          }
        },
        {
          "name": "Get Transaction Summary",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/transactions/summary",
              "host": ["{{baseUrl}}"],
              "path": ["transactions", "summary"]
            }
          }
        },
        {
          "name": "Get Transaction by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/transactions/{{transactionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["transactions", "{{transactionId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Reports",
      "item": [
        {
          "name": "Dashboard Summary",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reports/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "dashboard"]
            }
          }
        },
        {
          "name": "Inventory Report",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reports/inventory?category=electronics&sortBy=stock&sortOrder=asc",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "inventory"],
              "query": [
                {
                  "key": "category",
                  "value": "electronics"
                },
                {
                  "key": "sortBy",
                  "value": "stock"
                },
                {
                  "key": "sortOrder",
                  "value": "asc"
                }
              ]
            }
          }
        },
        {
          "name": "Transaction Report",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reports/transactions?type=sale&groupBy=day",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "transactions"],
              "query": [
                {
                  "key": "type",
                  "value": "sale"
                },
                {
                  "key": "groupBy",
                  "value": "day"
                }
              ]
            }
          }
        },
        {
          "name": "Customer Report",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reports/customer/{{customerId}}",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "customer", "{{customerId}}"]
            }
          }
        },
        {
          "name": "Vendor Report",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reports/vendor/{{vendorId}}",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "vendor", "{{vendorId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Health & Utility",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:5000/health",
              "protocol": "http",
              "host": ["localhost"],
              "port": "5000",
              "path": ["health"]
            }
          }
        },
        {
          "name": "API Documentation",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/docs",
              "host": ["{{baseUrl}}"],
              "path": ["docs"]
            }
          }
        }
      ]
    }
  ]
}